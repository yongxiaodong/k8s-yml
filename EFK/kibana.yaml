#apiVersion: v1
#kind: Service
#metadata:
#  name: kibana
#  namespace: logging
#  labels:
#    app: kibana
#spec:
#  ports:
#  - port: 5601
#  type: NodePort
#  selector:
#    app: kibana
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: logging
  labels:
    app: kibana
spec:
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
    spec:
      nodeSelector:
        es: es
      containers:
      - name: kibana
        image: docker.elastic.co/kibana/kibana:7.6.2
        resources:
          limits:
            cpu: 4000m
          requests:
            cpu: 200m
        env:
        - name: ELASTICSEARCH_HOSTS
          value: http://elasticsearch:9200
      tolerations:
      - key: "es"
        operator: "Exists"
        effect: "NoSchedule"
---
apiVersion: v1
kind: Service
metadata:
  name: kibana-lb
  namespace: logging
  annotations:
    service.beta.kubernetes.io/alibaba-cloud-loadbalancer-force-override-listeners: "true"
    service.beta.kubernetes.io/alibaba-cloud-loadbalancer-id: lb-2zeqy18g6z116vuyjpc7x
    service.beta.kubernetes.io/alibaba-cloud-loadbalancer-scheduler: "wrr"
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  ports:
    - port: 5601
      targetPort: 5601
      protocol: TCP
  selector:
    app: kibana
---

#apiVersion: extensions/v1beta1
#kind: Ingress
#metadata:
#  name: kibana
#  namespace: logging
#  annotations:
#    nginx.ingress.kubernetes.io/auth-type: basic
#    nginx.ingress.kubernetes.io/auth-secret: kibana-basic-auth
#    nginx.ingress.kubernetes.io/auth-realm: "Authentication Required - kibana"
#    nginx.ingress.kubernetes.io/configuration-snippet: |
#      expires 10d;
#spec:
#  rules:
#    - host: k8skibana.haojiequ.com
#      http:
#        paths:
#        - path: /
#          backend:
#            serviceName: kibana
#            servicePort: 5601
