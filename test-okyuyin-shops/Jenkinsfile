pipeline {
    agent {
    node {
        label 'jenkinsbuildnode'
        }
    }
   environment {
       git_url = 'http://47.101.131.117:3000/okvoice/okyuyin-shops.git'
       docker_registry = '172.26.112.47'
       docker_registry_item = 'okyuyin-shops'
       image_name = "${docker_registry_item}"
       docker_image_fqdn = '${docker_registry}/${docker_registry_item}/${image_name}:${BUILD_ID}'
   }
    stages {

		stage('Pull code') {
			steps {
			dir('./project') {
				git branch: '${branch_name}', credentialsId: '09267d83-3027-4ac5-a940-e0e61757e48a', url: "${git_url}"
				sh "/bin/cp -fR ../${JOB_NAME}/* ./"
			}
			}
		}
		
	  stage('get_commit_msg') {
		 steps {
			script {
			   env.GIT_COMMIT_MSG = sh (script: 'git log -1 --pretty=%B ${GIT_COMMIT}', returnStdout: true).trim()
			}
		}
	  }
	  stage('npm') {
					//  when {
			//     changelog '.*$'
			//     }
				steps {
				script {
					if ( skip == 'no' ) {
					dir('./project') {
					sh '''
						npm install
						npm run build
					'''
				}
				}
				}
			}

		}
		stage('build docker image') {
			steps {
				dir('./project') {
				sh """
				docker build -t  ${docker_image_fqdn} -f prd_Dockerfile  .
				docker login -u admin -p okvoice ${docker_registry}
				docker push ${docker_image_fqdn}
				docker rmi ${docker_image_fqdn}
				"""
			}
			}
		}
		stage('deploy') {
			steps {
				dir('./project') {
				sh 'sed -i "s/replicas:.*/replicas: ${replicas_count}/g" deploy.yml'
				sh 'sed -i "s/\\(^.*image: \\)\\(.*$\\)/\\1${docker_registry}\\/${docker_registry_item}\\/${image_name}:${BUILD_ID}/g" deploy.yml'
				kubernetesDeploy configs: 'deploy.yml', kubeConfig: [path: ''], kubeconfigId: '1e486a1c-7a15-425e-adf2-e114d233ded5', secretName: '', ssh: [sshCredentialsId: '*', sshServer: ''], textCredentials: [certificateAuthorityData: '', clientCertificateData: '', clientKeyData: '', serverUrl: 'https://']
			}
			}
		}


	}
}

