stages:
  - build
  - docker
  - deploy
  - notify

build:
  stage: build
  image: registry-vpc.cn-beijing.aliyuncs.com/dataoke-prod/adoptopenjdk-maven-openjdk8:with-mirrors
  cache:
    key:
      files:
      - pom.xml
    paths:
      - .m2
  artifacts:
    expire_in: 5 mins
    untracked: false
    paths:
      - $CI_PROJECT_DIR/target/*.jar
  variables:
    MAVEN_OPTS: -Dmaven.repo.local=.m2
  script:
  - mvn clean package -Dmaven.test.skip=true -e -U -Pprod --show-version
  only:
    - master
docker:
  stage: docker
  image: registry-vpc.cn-beijing.aliyuncs.com/dataoke-prod/kaniko-executor:debug
  script:
  - mkdir -p /kaniko/.docker
  - echo "${DOCKER_AUTH_CONFIG}" > /kaniko/.docker/config.json
  - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile.prod --destination registry-vpc.cn-beijing.aliyuncs.com/dataoke-prod/${CI_PROJECT_NAME}:${CI_COMMIT_SHORT_SHA} --destination registry-vpc.cn-beijing.aliyuncs.com/dataoke-prod/${CI_PROJECT_NAME}:latest 
  only:
    - master
    
deploy:
  stage: deploy
  image: registry-vpc.cn-beijing.aliyuncs.com/dataoke-prod/kubectl:1.18.1
  variables:
    GIT_STRATEGY: none
    K8S_NAME_SPACE: default
  script:
  - mkdir -p $HOME/.kube
  - echo "$KUBERNETES_SECRET" >> "$HOME/.kube/config"
  - kubectl version
  - kubectl get deployments.apps -n ${K8S_NAME_SPACE}
  - kubectl -n ${K8S_NAME_SPACE} set image deployment/`echo  ${CI_PROJECT_NAME} |sed 's@_@-@g'` spring-boot=registry-vpc.cn-beijing.aliyuncs.com/dataoke-prod/${CI_PROJECT_NAME}:${CI_COMMIT_SHORT_SHA} --record
  only:
    - master

notifyFailWeChat:
  stage: notify
  image: registry-vpc.cn-beijing.aliyuncs.com/dataoke-prod/curl-image:v1
  script:
    - curl 'https://oapi.dingtalk.com/robot/send?access_token=ce85debf608100a4ad62f3253b0165fa4af59d6147ec1eb7d8b9bd5cd1b15f1c' -H 'Content-Type:application/json' -d "{\"msgtype\":\"text\",\"text\":{\"content\":\"$CI_PROJECT_NAME项目构建失败\n>本次构建由：$GITLAB_USER_NAME 触发\n>项目名称：$CI_PROJECT_NAME\n>提交号：$CI_COMMIT_SHA\n>提交日志：$CI_COMMIT_MESSAGE\n>构建分支：$CI_COMMIT_BRANCH\n>流水线地址：[$CI_PIPELINE_URL]($CI_PIPELINE_URL)\"}}"

  only:
    - master
  when: on_failure

# 构建成功时的通知消息
notifySuccessWeChat:
  stage: notify
  image: registry-vpc.cn-beijing.aliyuncs.com/dataoke-prod/curl-image:v1
  script:
    - curl 'https://oapi.dingtalk.com/robot/send?access_token=ce85debf608100a4ad62f3253b0165fa4af59d6147ec1eb7d8b9bd5cd1b15f1c' -H 'Content-Type:application/json' -d "{\"msgtype\":\"text\",\"text\":{\"content\":\"$CI_PROJECT_NAME项目构建成功\n>本次构建由：$GITLAB_USER_NAME 触发\n>项目名称：$CI_PROJECT_NAME\n>提交号：$CI_COMMIT_SHA\n>提交日志：$CI_COMMIT_MESSAGE\n>构建分支：$CI_COMMIT_BRANCH\n>流水线地址：[$CI_PIPELINE_URL]($CI_PIPELINE_URL)\"}}"
  only:
    - master
  when: on_success

