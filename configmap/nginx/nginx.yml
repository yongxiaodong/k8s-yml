apiVersion: v1
kind: Namespace
metadata:
  name: quanzi
---

apiVersion: v1
data:
  nginx.conf: |+
    user  nginx;
    worker_processes  auto;

    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;

    worker_rlimit_nofile 65535;
    events {
        worker_connections  65535;
    }


    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;
        server_tokens off;
        server_names_hash_bucket_size 512;
        client_header_buffer_size 32k;
        large_client_header_buffers 4 32k;
        client_max_body_size 1024m;

        log_format json '{ "access_time": "$time_iso8601", '
            '"remote_addr": "$remote_addr", '
            '"http_referrer": "$http_referer", '
            '"method": "$request", '
            '"path": "$uri", '
            '"request_time": $request_time,'
            '"status": $status, '
            '"body_bytes_sent":$body_bytes_sent, '
            '"http_user_agent": "$http_user_agent", '
            '"x-forward-for": "$http_x_forwarded_for", '
            '"upstream_addr": "$upstream_addr",'
            '"request_id": "$http_x_request_id",'
            '"upstream_response_time": $upstream_response_time }';

        access_log  /var/log/nginx/access.log  json;

        sendfile        on;
        #tcp_nopush     on;

        keepalive_timeout  65;

        #gzip  on;

        include /etc/nginx/conf.d/*.conf;
    }

kind: ConfigMap
metadata:
  name: nginx-base-conf
  namespace: quanzi
---

apiVersion: v1
data:
  app.conf: |+
    server {
        listen       80;
        listen  [::]:80;
        server_name  localhost;

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }
    }

kind: ConfigMap
metadata:
  name: nginx-confd-dir
  namespace: quanzi